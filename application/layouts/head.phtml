<?php 
//echo '<pre>';var_dump(Common::getSession()->user);echo '</pre>'; ?>
<head>
    <?php echo $this->headTitle(); ?>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <link href="<?php echo $this->baseUrl('favicon.ico'); ?>" rel="shortcut icon" />
    <?php echo $this->minifyHeadLink()
        //->appendStylesheet('tooltip.css')
        //->appendStylesheet('bootstrap.css')
        //->appendStylesheet('normalize.css')
        ->appendStylesheet('jquery.qtip.css')
        ->appendStylesheet('ui-lightness/jquery-ui-1.10.3.custom.min.css')
        ->appendStylesheet('main.css');
    ?>
    
    <?php if (Zend_Registry::get('config_ini')->server->online==1){ ?>
        <script src="http://maps.googleapis.com/maps/api/js?key=<?php echo Zend_Registry::get('config_ini')->google->api_key ?>&sensor=false&amp;libraries=places&amp;region=hk&amp;language=<?php echo Common::getSiteDisplayLang();?>" type="text/javascript"></script>
    <?php } ?>
    
    <?php $this->minifyHeadScript()
        ->prependFile('jquery-ui-1.10.3.custom.js')
        ->prependFile('jquery-1.8.3.min.js')
        ->appendFile('jquery.tmpl.min.js')
        ->appendFile('jquery.qtip.min.js')
        ->appendFile('jquery.watermark.js')
        ->appendFile('jquery.dotdotdot-1.5.3.js')
        ->appendFile('jQueryRotate.2.2.js')
        //->appendFile('jquery.validate.js')
        ->appendFile('jquery.address-1.5.min.js')
        ->appendFile('jquery.lazyload.js')
        ->appendFile('jquery.uqr.js')
        ->appendFile('jquery.timepicker.min.js')
        ->appendFile('jquery.mousewheel-3.1.6.js')
        ->appendFile('jquery.scrollpanel-0.1.min.js')
        ->appendFile('validate/jquery.validate.min.js')
        ->appendFile('tinymce/jquery.tinymce.js')
        ->appendFile('jquery.cookie.js');
    
        if (Common::getSiteDisplayLang() == 'zh-hk'){
          $this->minifyHeadScript()->appendFile('jquery.validate.messages_zh_TW.js');
        }
        if (Zend_Registry::get('config_ini')->server->online==1){
            echo $this->minifyHeadScript()->appendFile('map/distancewidget.js');
        }else{
            echo $this->minifyHeadScript();
        }
    ?>
    <link href="<?php echo $this->baseUrl('css/wittysparks_checkbox_radio.css')?>"  rel="stylesheet" type="text/css" >
    <?php /*
    <link href="<?php echo $this->baseUrl('css/main.less')?>" rel="stylesheet/less" type="text/css" media="all">
      <script type="text/javascript" src="<?php echo $this->baseUrl('js/less-1.3.0.min.js')?>"> </script> */ ?>
      
    <!-- Internet Explorer HTML5 enabling code: -->
    <!--[if IE]>
            <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
            <script src="http://ie7-js.googlecode.com/svn/version/2.1(beta4)/IE9.js"></script>
            <script src="http://ie7-js.googlecode.com/svn/version/2.1%28beta4%29/ie7-squish.js"></script>
    
            <link href="<?php echo $this->baseUrl('css/ie.css')?>" rel="stylesheet" type="text/css" media="all">
            <style type="text/css">
            .clear {
              zoom: 1;
              display: block;
            }
            </style>
        <![endif]-->
    <!--[if (gte IE 6)&(lte IE 8)]>
      <script type="text/javascript" src="<?php echo $this->baseUrl('js/selectivizr-min.js')?>"></script>
    <![endif]--> 

<!-- qtip box -->
<script type="text/javascript">
    var flash_messages = jQuery.parseJSON('<?php echo json_encode(Zend_Controller_Action_HelperBroker::getStaticHelper('FlashMessenger')->getMessages()) ?>');

   jQuery(function($){
        if (flash_messages != []){
            showFlashMessages(flash_messages);
        }
        jQuery.address
            .crawlable(1)
            <?php if ($this->baseUrl()!='/'){?>
            .state('<?php echo $this->baseUrl()?>')
            <?php }?>
            .init(function(event) {
            });
        $.ajaxSetup({
            type: "POST",
            dataType:"json",
            error:function(jqXHR, textStatus, errorThrown){
                //console.log(errorThrown);
                //console.log(textStatus);
            },
            cache: true
        })
        <?php if (APPLICATION_ENV == 'production'){
            ?>
            // hack for disabling console.log... 
                console = console || {};
                console.log = function(){};
            <?php 
            }
        ?>
        $.fn.qtip.defaults = $.extend(true, {}, $.fn.qtip.defaults, {
            overwrite: true,
            content: {
                text: true,
                attr: '<img class="throbber" src="<?php echo $this->baseUrl('images/throbber.gif')?>" alt="Loading..." />',
                ajax: {
                    type: 'POST',
                    dataType: 'json',
                    //url: $(this).attr('rel'),
                    once: false,
                    loading: false,
                    error:function(){
                        //alert( jqXHR.responseText);
                    }
                },
                title: {
                    button: true
                }
            },
            events: {
                visible: function(event, api) {
                    // Grab the tooltip element from the API
                    var tooltip = api.elements.tooltip
                    // ...and here's the extra event binds
                    tooltip.bind('tooltipshow', function(event, api) {
                        $.watermark.showAll();
                    })
                    
                }
            },
            show: {
                event: 'click',
                solo: true, // Only show one tooltip at a time
                delay: 0,
                effect: false
            },
            hide: {
                event: 'unfocus'
            }
            <?php /*
            ,position: {
                at: 'bottom center', 
                my: 'top left',
                viewport: $(window), // Keep the tooltip on-screen at all times
                //effect: false // Disable positioning animation
            }, 
            ,style: {
                def:false,
                //classes: 'qtip-wiki qtip-light qtip-shadow'
                classes: 'ui-tooltip-green ui-tooltip-shadow'
            }*/ ?>
        })
        
        $.watermark.options = {
          className: 'watermark'
        };
        
        $('input[type="checkbox"]+ label').disableSelection();
          
       //not sure why it's not working
         $.datepicker.setDefaults({
           dateFormat: 'yy-mm-dd'
        });
       
        $('body').on('click', '[data-hasqtip]' , function(ev) {
            ev.preventDefault();
        });
        
        $("img.lazy").lazyload({
        });
        
        $.ajaxSetup({
          type: "POST",
          dataType:"json",
          error:function(jqXHR, textStatus, errorThrown){
            //console.log(errorThrown);
            //console.log(textStatus);
          },
          cache: true
        })
    });
    
    function jQDialog(title, contentUrl, params, buttons) {
      //if (!width) var width='500';
      //if (!height) var height='500';
      
      //close previous dialog if existed...
      //jQuery(".dialog").dialog('close');
      
      var dialog = jQuery(".dialog").dialog(
        {
            title: title,
            buttons: buttons,
            closeOnEscape: true,
            position: "center",
            width: "auto",
            height: "auto",
            resizable: false,
            autoOpen: false,
            minHeight: false,
            maxHeight: false,
            draggable: false,
            modal: true,
            open: function(event, ui) { 
              $('.ui-widget-overlay').bind('click', function(){ dialog.dialog('close'); }); 
            },
            close:  function (e, ui){
              $(this).html('<p class="loading"><?php echo $this->translate('loading')?>...</p>')
            }
        }).load(contentUrl, params, function() {
            //TODO to fix the dialog with variable height to be middle aligned 
            dialog.dialog('open').dialog("option", "position", "center");;
        });
     }
     
    //begin date and end date for sidebar and feed para
    var today = new Date();
    var end_date = new Date();
    end_date.setDate(today.getDate()+60);
    
    var map_markers_data = changed_feed_input_names = [];
    
    var default_feed_para = feed_para = {};
        default_feed_para['q'] = '';
        default_feed_para['begin_date'] = $.datepicker.formatDate('yy-mm-dd', today);
        default_feed_para['end_date'] = $.datepicker.formatDate('yy-mm-dd', end_date);
        
    // just for the demos, avoids form submit
    jQuery.validator.setDefaults({
      debug: true,
      success: "valid"
    });
    
// feed content including in sidebar, that's why we put feed functions here
var ns_feed = {
  render: function(data_arr, more_flag, template_id){
    if (typeof more_flag == 'undefined') var more_flag=false;
    if (typeof template_id == 'undefined') var template_id = 'feed_index_item';
      var feeds_html = ns_feed.getHTML(data_arr, template_id);
      
      if (more_flag) feeds_html.appendTo( ".feeds_and_more .feeds");
      else $(".feeds_and_more .feeds").html(feeds_html);
      
      //decide if number of feeds is less than expected plus it's not a 'more' action, then the more button is not needed
      if (feeds_html.length == 0 <?php //echo Zend_Registry::get('config')->filter->user_para->rpp ?>){
          hideMoreButton(more_flag);
      }else{
          $('.load_more_feeds .loading').hide();
          $('.load_more_feeds .more').show();
      }
      
      ns_feed.attachEvents();
  },
  getHTML: function(data_arr, template_id, custom_functions){
    if (typeof template_id == 'undefined') var template_id = 'feed_index_item';
    if (typeof custom_functions == 'undefined') var custom_functions = {};
    
    var functions = $.extend(true, {}, {
        getMainPicTitle: function(){
            var img_is_main_pics =this.data.img_is_main_pics.split(',');
            var img_descriptions =this.data.img_descriptions.split(',');
            for( index in img_is_main_pics){
                if (img_is_main_pics[index] == 1){
                    return img_descriptions[index];
                }
            }
        },
        getMainPicURL: function(){
            var img_is_main_pics =this.data.img_is_main_pics.split(',');
            var img_filenames =this.data.img_filenames.split(',');
            for( index in img_is_main_pics){
                if (img_is_main_pics[index] == 1){
                    return '<?php echo $this->baseUrl('uploads');?>/'+img_filenames[index];
                }
            }
            return '<?php echo Common::changePathToURL(Common::config()->pics->event->public);?>';
        },
        hasMainCat: function(){
            return !(jQuery.isEmptyObject(this.data.tree_ids.main));
        },
        getMainCatName: function(){
            var main_cat_ids = this.data.tree_ids.main;
            var keys = $.keys(main_cat_ids);
            return data_arr.tree_tags[main_cat_ids[keys[keys.length-1]]]['name'];
        },
        getMainCatURL: function(){
            var main_cat_ids = this.data.tree_ids.main;
            var url = [];
            for (index in main_cat_ids){
              if (typeof data_arr.tree_tags[main_cat_ids[index]] != 'undefined'){
                  url.push(data_arr.tree_tags[main_cat_ids[index]]['slug_name']);
              }else {
                  //unknown error: data_arr.tree_tags[main_cat_ids[index]] can be undefined...
                  alert('Error occured, please refresh the page.');
                  return '';
              }
            }
            url = url.join('/');
            return '<?php echo $this->baseUrl('tree');?>/'+url;
        },
        urldecode: function() {
           //console.log(this.data);
          if (typeof arguments[0] == 'string') 
              return decodeURIComponent((arguments[0]+'').replace(/\+/g, '%20')).replace('\n','<br />');
              //return $("<div/>").html(arguments[0]).text();
          else return '';
        },
        formatMysqlDate: function() { 
            if (typeof arguments[0] == 'string') 
              return $.datepicker.formatDate('dd M yy', mysqlTimeStampToDate(arguments[0]));
        },
        tagHTML: function() {
            var tag_slug_names =this.data.tag_slug_names.split(',');
            var tag_names =this.data.tag_names.split(',');
            var tag_types =this.data.tag_types.split(',');
            var html = [];
            for( index in tag_slug_names){
              if (tag_names[index]!='' && tag_slug_names[index]!='' && tag_slug_names[index]!='')
                  html.push('<a href="<?php echo $this->baseUrl();?>/'+tag_types[index]+'/'+tag_slug_names[index]+'">'+tag_names[index]+'</a>');
            }
            return html.join(', ');
        }
    } , custom_functions);
    
    //console.log(data_arr);
    return $( "#"+template_id ).tmpl(data_arr.data,functions);
  },
  attachEvents: function(){
    
    $("abbr.timeago").timeago();
    
    $(".tag_top a.place").qtip({
        content: {
            text: '<div style="text-align:center"><img class="throbber" src="<?php echo $this->baseUrl('images/throbber.gif')?>" alt="Loading..." /></div>'
        },
        position: {
            my: 'top left',
            at: 'bottom right', // Stick it at the top left of our element
            viewport: $(window), // Keep it within the window boundaries...
            adjust: { method: 'shift' } // ...by shifting it, not flipping as is default!
        },
        show: 'click', // Show on click
        hide: 'unfocus', // Hide it when the element loses focus
        style: {
            classes: 'qtip-googlemap qtip-shadow',
            width: 200 // Keep the tooltip a set width.. in our case 200px!
          },
          events: {
              render : function(event, api)
              {
                  var tooltip = $(this),
   
                  // Setup the map container and append it to the tooltip
                container = $('<div style="width:200px; height:200px;"></div>')
                      .appendTo(api.elements.content.empty());
                      
   
                  // Temporarily show the tooltip so we don't get rendering bugs in GMaps
                  tooltip.show();
   
                  // Create map object as api attribute for later use
                api.map = new google.maps.Map(container[0], {
                    zoom: 12, // Close zoom!
                    mapTypeId: google.maps.MapTypeId.ROADMAP // Use the classic roadmap
                  });
   
                  // Hide the tooltip again now we're done
                tooltip.hide();
            },
            show: function(event, api)
            {
                // Grab the map reference and target
                var map = api.map,
                    target = api.elements.target,
                    coords, latlong, map, marker, info;
                
                // Parse coordinates of event target
                coords = target.attr('data-coord').split(',');
   
                  // Setup place_lat/long coordinates
                  latlong = new google.maps.LatLng(parseFloat(coords[0]), parseFloat(coords[1]));
   
                  // Create marker at the new location and center map there
                marker = new google.maps.Marker({
                    position: latlong,
                    map: map,
                    title: target.attr('alt') // Use the alt attribute of the target for the marker title
                });
                map.setCenter(latlong);
            }
        }
    })
    /*.dotdotdot({
            wrap : 'word',
            height: 16
    });*/
    
    $(".post_right div.content").dotdotdot({
            wrap : 'letter',
            height: 80
    });
    
    $(".direction-arrow").each( function(){
        var direction=$(this).attr('class').replace('direction-arrow ','');
        if (direction!=''){
            $(this).css('display','inline-block');
            $(this).rotate(parseInt(direction));
        }else{
            //$(this).css('display','none');
        }
    })
  }
}
</script>
</head>