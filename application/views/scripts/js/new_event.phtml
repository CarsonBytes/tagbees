<?php echo $this -> partial('js/common/tinymce.phtml'); ?>
<script type="text/javascript">
var ns_new_event = {};
var event_form_data = {};
var new_event_basic_validate_options = {};
jQuery(function($){
  jQuery.validator.addMethod("custom_numeric", function(value, element) {
    return isNumber(value);
  }, "Value should be numeric");
  
  new_event_basic_validate_options = {
    ignore: [],
    rules: {
      new_event_event_type: "pageRequired",
      new_event_name: {required: true, minlength: 4, maxlength: 20} ,
      new_event_begin_date: {pageRequired: true, date: true},
      new_event_end_date: {pageRequired: true, date: true},
      new_event_begin_time: "pageRequired",
      new_event_end_time: "pageRequired",
      new_event_min_price: {pageRequired: true, custom_numeric: true} ,
      new_event_max_price: {pageRequired: true, custom_numeric: true} ,
      cat1: "pageRequired",
      cat2: "pageRequired",
      cat3: "pageRequired"
    },
    messages: {
      cat3: '<?php $this->translate("Please make sure to specify 3 levels of category");?>'
    },
    groups: {
        begin_end_date_time: "new_event_begin_date new_event_end_date new_event_begin_time new_event_end_time",
        new_event_price: "new_event_min_price new_event_max_price",
        tree: "cat1 cat2 cat3"
    },
   errorPlacement: function(error, element) {
     var element_arr = ["new_event_begin_date", "new_event_end_date", "new_event_begin_time", "new_event_end_time"];
     if ($.inArray(element.attr("name"), element_arr) != -1){ 
      error.insertAfter("#new_event_end_time");
      return true;
     }
     element_arr = ["new_event_min_price", "new_event_max_price"];
     if ($.inArray(element.attr("name"), element_arr) != -1){ 
      error.insertAfter("#new_event_max_price");
      return true;
     }
     element_arr = ["cat1", "cat2", "cat3"];
     if ($.inArray(element.attr("name"), element_arr) != -1){ 
      error.insertAfter("#cat3");
      return true;
     }
     error.insertAfter(element);
   },
   submitHandler: function(form) {
     form.submit();
   },
   invalidHandler: function(event, validator) {
     ns_new_event.init(false);
     showFlashMessages([{'error' : 'please correct the input(s).'}]);
   }
 };
  
  $('body').on('click','input[name="new_event_save"]',function(){
      saveFormToCookie($('.event_form form').prop('id'));
      showFlashMessages([{'success' : '<?php echo $this->translate('This form input has been saved!'); ?>'}]);
      return false;
  }).on('click','input[name="new_event_more_detail"]',function(){
      saveFormToCookie('new_event_basic');
      saveFormToCookie('new_event_advanced');
      return false;
  })
  ns_new_event = {
    event_dates: null,
     init: function(is_reload){
      if (typeof is_reload == 'undefined') var is_reload=true;
      
      $('.timepicker').timepicker({ 'timeFormat': 'H:i', step : 15 });
      
      //tuning date range (no reversed date range)
      ns_new_event.event_dates = $('#new_event_begin_date, #new_event_end_date').datepicker({
          defaultDate: "+1w",
          changeMonth: true,
          changeYear: true,
          onSelect: function( selectedDate ) {
              var option = this.id == "new_event_begin_date" ? "minDate" : "maxDate",
                  instance = $( this ).data( "datepicker" ),
                  date = $.datepicker.parseDate(
                      instance.settings.dateFormat ||
                      $.datepicker._defaults.dateFormat,
                      selectedDate, instance.settings );
              ns_new_event.event_dates.not( this ).datepicker( "option", option, date );
          },
      });
      
      if (is_reload){
        
        loadCookieToForm($('.event_form form').prop('id'));
      
        //$('#addToCategoryDiv, #addTag, .addTumblrDiv').hide();
        
        $('body').on('click','.timezone_trigger',function(){
            $('.timezone_input ').slideToggle();
            return false;
        })
        .on('click','.new_event_event_types a', function(){
          var value= $(this).data('value');
          //$("#new_event_type_caption_"+value).show("slow").siblings().hide("slow");
          $('.new_event_type_caption div').hide();
          $("#new_event_type_caption_"+value).show();
          if( ! $(this).hasClass('active') ) {
              $( ".new_event_event_types a" ).removeClass( "active" );
              $(this).addClass( "active" );
              $("#new_event_event_type").val($(this).data('value'));
          }
          $('#new_event_event_type').valid();
          return false;
        })
        .on('click','#new_event_is_free', function(){
          if ($(this).is(':checked')){
            $('#priceFree').slideUp('fast');
            $('#new_event_min_price, #new_event_max_price').prop('disabled', true);
          }else{
            $('#new_event_min_price, #new_event_max_price').prop('disabled', false);
            $('#priceFree').slideDown('fast')
          }
        }).on('change','#new_event_is_any_time, #new_event_is_all_day', function(){
              ns_new_event.updatePeriodInputs($('#new_event_is_any_time'), $('#new_event_is_all_day'), $('#new_event_begin_date'),$('#new_event_end_date'), $('#new_event_begin_time'),$('#new_event_end_time'));
        }).on('click');
      
        //check inputs
        ns_new_event.updateFromHiddenInputs();
        
        ns_new_event.updatePeriodInputs($('#new_event_is_any_time'), $('#new_event_is_all_day'), $('#new_event_begin_date'),$('#new_event_end_date'), $('#new_event_begin_time'),$('#new_event_end_time'));
        
        tinymce_ns.init('#new_event_description');
      }
      
      $('#new_event_begin_time').watermark("<?php echo $this->translate('new_event_begin_time') ?>");
      $('#new_event_end_time').watermark("<?php echo $this->translate('new_event_end_time') ?>");
      $('#new_event_begin_date').watermark("<?php echo $this->translate('new_event_begin_date') ?>");
      $('#new_event_end_date').watermark("<?php echo $this->translate('new_event_end_date') ?>");
      $('#new_event_max_price').watermark("<?php echo $this->translate('new_event_max_price') ?>");
      $('#new_event_min_price').watermark("<?php echo $this->translate('new_event_min_price') ?>");
     },
     updatePeriodInputs: function(is_any_time_input, is_all_day_input, begin_date_input, end_date_input, begin_time_input, end_time_input){
      if (is_any_time_input.is(':checked')){
        begin_date_input.prop('disabled',true);
        end_date_input.prop('disabled',true);
        begin_time_input.prop('disabled',true);
        end_time_input.prop('disabled',true);
        is_all_day_input.prop('disabled',true);
      }else{
        begin_date_input.prop('disabled',false);
        end_date_input.prop('disabled',false);
        is_all_day_input.prop('disabled',false);
        
        if (is_all_day_input.is(':checked')){
          begin_time_input.prop('disabled',true);
          end_time_input.prop('disabled',true);
        }else{
          begin_time_input.prop('disabled',false);
          end_time_input.prop('disabled',false);
        }
      }
    },
    updateFromHiddenInputs: function(){
      if ($('#new_event_event_type').val()!=''){
          $("#new_event_type_caption_"+$('#new_event_event_type').val()).show();
          $('.new_event_event_types a[data-value="'+$('#new_event_event_type').val()+'"]').addClass( "active" );
      }
      if ($('#tree_text').val()!=''){
          $('p.tree_line_hidden').text($('#tree_text').val()).css('display','inline-block');
          $('.tree_line_hidden').show();
          $('label.tree_line_hidden').css('display','inline-block');
          $('p.tree_line_hidden').css('display','inline-block');
      }
      if ($('#new_event_is_free').is(':checked')){
        $('#priceFree').hide();
        $('#new_event_min_price, #new_event_max_price').prop('disabled', true);
      }
    }
  }
  ns_new_event.init();
});
</script>
<?php if (Zend_Registry::get('config_ini')->server->online==1){
    echo $this->partial('js/new_event/map.phtml');
    echo $this->partial('js/new_event/init_map.phtml', array('mapDiv_ID'=>'new_event_map', 'ac_input_ID'=>'new_event_place', 'lat_input_ID'=>'new_event_lat', 'lng_input_ID'=>'new_event_lng', 'geo_locate_ID'=>'new_event_geo_locate'));
} ?>