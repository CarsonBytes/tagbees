<?php $isLogined = (Zend_Auth::getInstance()->hasIdentity() && Common::getSession()->user != null); ?>
<script type="text/javascript">
//these two variables maxDistance and minDistance cannot be namespaced because of the shared used of distancewidget.js
var maxDistance = <?php echo Zend_Registry::get('config')->filter->sys_para->max_distance ?>;
var minDistance = <?php echo Zend_Registry::get('config')->filter->sys_para->min_distance ?>;
var ns_filter = {
  saved_locations : [],
  elem_saved_location_list_txt: '.match_location_set .user_saved_location_list',
  is_saved_location_overrided : false,
  init: function(){
    <?php if ($isLogined){ ?>
      <?php foreach(Common::getSession()->user_saved_locations as $value){ ?>
        this.saved_locations['<?php echo $value['name']?>']=[<?php echo $value['lat']?>,<?php echo $value['lng']?>,<?php echo $value['radius']?>];
      <?php } ?>
    <?php } ?>
    $(ns_filter.elem_saved_location_list_txt).chosen({display_disabled_options: false});
  }
};

jQuery(function($){
  ns_filter.init();
  <?php if (Zend_Auth::getInstance()->hasIdentity()){ ?>
   $('body').on('click', '.match_location_set .manage_location', function(){
     ns_common_head.jQDialog(
      '<?php echo $this->baseUrl('ajax/dialog/manage_location')?>',
      {
          title: '<?php echo $this->translate('manage location') ?>',
          buttons: {
                Close: function() {
                    $( this ).dialog( "close" );
                }
          }
      }
    );
    return false;
   }).on('click','.match_location_set .save_location',function(){
       ns_common_head.jQDialog(
        '<?php echo $this->baseUrl('ajax/dialog/save_location')?>',
        {
          title: '<?php echo $this->translate('save location') ?>',
          buttons: 
          {
            Save: function() {
                var dialog=$(this);
                var location_name=$('.dialog input.save_location_name').val();
                $.ajax({
                      type: "POST",
                      url: "<?php echo $this->baseUrl('ajax/location/save') ?>",
                        data: {
                            name:location_name,
                            place_lat:ns_feeds.feed_para['place_lat'],
                            place_lng:ns_feeds.feed_para['place_lng'],
                            radius:ns_feeds.feed_para['radius'],
                            override:ns_filter.is_saved_location_overrided
                        },
                      success: function(msg){
                            if (msg['result']==1){
                                ns_filter.saved_locations[location_name]=[ns_feeds.feed_para['place_lat'],ns_feeds.feed_para['place_lng'],ns_feeds.feed_para['radius']];
                                if (!ns_filter.is_saved_location_overrided){
                                  jQuery(ns_filter.elem_saved_location_list_txt).append("<option value=\""+location_name+"\">"+location_name+"</option>")
                                  jQuery(ns_filter.elem_saved_location_list_txt).val(location_name);
                                  jQuery(ns_filter.elem_saved_location_list_txt).trigger('chosen:updated');
                                }else{
                                    ns_filter.is_saved_location_overrided = false;
                                }
                                dialog.dialog( "close" );
                            }else if (msg['result']==1062){
                              
                                $('.dialog').prepend('<p><?php echo $this->translate('same name exists in your saved locations, do you still want to override?')?></p>');
                                ns_filter.is_saved_location_overrided = true;
                            }else{
                                $('.dialog').prepend('<p><?php echo $this->translate('unknown error occured, please try again.')?></p>')
                            }
                        },
                    dataType:'json'
                });
            },
            Cancel: function() {
                $( this ).dialog( "close" );
                ns_filter.is_saved_location_overrided=false;
            }
          }
        },
        {title: $('.radius_amt #of').text()}
      );
      return false;
   }).on('click', '.delete_user_saved_location', function(){
        var tr =$(this).parents('tr');
        var name=$(this).parents('tr').children('td.name').text();
        $.ajax({
              type: "POST",
              url: "<?php echo $this->baseUrl('ajax/location/delete') ?>",
                data: {
                    'name':name,
                },
              success: function(msg){
                if (msg['result']==1){
                    tr.remove();
                    if (jQuery(ns_filter.elem_saved_location_list_txt).val()==name){
                      jQuery(ns_filter.elem_saved_location_list_txt).val("last");
                    }
                    jQuery(ns_filter.elem_saved_location_list_txt).find("option[value='"+name+"']").remove();
                    jQuery(ns_filter.elem_saved_location_list_txt).trigger('chosen:updated');
                }else{
                    $('#dialog').prepend('<p><?php echo $this->translate('unknown error occured, please try again.')?></p>')
                }
                },
            dataType:'json'
        });
        return false;
    }).on('change',ns_filter.elem_saved_location_list_txt,function(){
        var name=jQuery(ns_filter.elem_saved_location_list_txt).val();
        console.log(ns_filter.saved_locations);
        if (name!='last'){
            ns_feeds.feed_para['place_lat']=ns_filter.saved_locations[name][0];
            ns_feeds.feed_para['place_lng']=ns_filter.saved_locations[name][1];
            ns_feeds.feed_para['radius']=ns_filter.saved_locations[name][2];
            
            ns_feeds.updateUrlParam('radius', ns_feeds.feed_para['radius']);
            ns_feeds.updateUrlParam('place_lat', ns_feeds.feed_para['place_lat']);
            ns_feeds.updateUrlParam('place_lng', ns_feeds.feed_para['place_lng']);
            
            ns_filter_map.loadPosition(ns_feeds.feed_para['place_lat'],ns_feeds.feed_para['place_lng']);
            ns_filter_map.loadRadius(ns_feeds.feed_para['radius']);
        }
    })
   <?php }else{ ?>
    $('input[name="is_match_interest"]+ label').qtip({
        content: {
            text: 'Please login to let us find your interest.',
            title: {
                button: false
            }
        },
        position: {
            my: 'bottom center',
            at: 'top center'
        },
        show: {
            event: 'mouseenter', delay: 100
        },
        hide: {
            event: 'mouseout'
        }
    });
    <?php } ?>
    
    //show after all events are attached esp. pretty checkable takes effect...
    
    $('body').on('click','.sort_by ul li', function(){
        ns_feeds.updateSortByInput($(this).data('value'));
        ns_feeds.addChangedFeedInputName($('.feed_filter_input[name="sort_by"]'));
        if (ns_feeds.validateSidebarSearchInputs()){
            for( key in ns_feeds.changed_feed_input_names){
                ns_feeds.updateFeedOptionsFromFeedInput($('*[name="'+ns_feeds.changed_feed_input_names[key]+'"]'));
            }
            ns_feeds.refresh('index');
        }
    })<?php if ($isLogined) { ?>
      .on('change','.feed_filter_input[name="is_match_interest"]', function(){
            ns_feeds.addChangedFeedInputName($('.feed_filter_input[name="is_match_interest"]'));
            if (ns_feeds.validateSidebarSearchInputs()){
                for( key in ns_feeds.changed_feed_input_names){
                    ns_feeds.updateFeedOptionsFromFeedInput($('*[name="'+ns_feeds.changed_feed_input_names[key]+'"]'));
                }
                ns_feeds.refresh('index');
            }
        <?php /* ?>
            var content = [{'error' : '<?php echo $this->translate('To customise your own interest, please login first.') ?>'}] ;
            ns_common_foot.showFlashMessages(content);
            $(this).removeAttr('checked');
            var element = $(this).parent('.prettycheckbox').find('a');
            element.delay(1000).removeClass('checked');
        <?php */?>
    })   
        <?php }?>
        .on('change','.feed_filter_input[name="is_match_location"]', function(){
        if ($(this).is(':checked')){
            jQuery('.match_location_set').css('display','block');
            ns_filter_map.initDistanceWidget();
        } else {
            jQuery('.match_location_set').css('display','none');
            distanceWidget.set('map', null);
        }
        ns_feeds.addChangedFeedInputName($('.feed_filter_input[name="is_match_location"]'));
        if (ns_feeds.validateSidebarSearchInputs()){
            for( key in ns_feeds.changed_feed_input_names){
                ns_feeds.updateFeedOptionsFromFeedInput($('*[name="'+ns_feeds.changed_feed_input_names[key]+'"]'));
            }
            ns_feeds.refresh('index');
        }
    }).on('click','.showMap', function(e){
        e.preventDefault();
        <?php if (Zend_Registry::get('config_ini')->server->online==1){ ?>
            var input = $('.feed_filter_input[name="is_show_map"]')
            if(input.prop('value') == 1){
                $(".showMap").text("Show Map").stop();
                $( "#map_wrapper" ).slideUp("slow");
                input.val(0);
            }else{
                $(".showMap").text("Hide Map").stop();
                $( "#map_wrapper" ).slideDown("slow");
                ns_filter_map.initMap();
                input.val(1);
            }
            ns_feeds.updateFeedOptionsFromFeedInput(input);
        <?php } else { ?>
            var content = [{'debug' : '<?php echo $this->translate('Online mode is off. Please check application.ini to make sure server.online = 1') ?>'}] ;
            ns_common_foot.showFlashMessages(content);
        <?php } ?>
    }).on('click','#refresh_feed', function(){
        if (ns_feeds.is_refreshing) return false;
        ns_feeds.refresh('index');
        ns_feeds.changed_feed_input_names = []; // reset changed variables in search form
        return false;
    })
});

</script>
<?php if (Zend_Registry::get('config_ini')->server->online==1){
    echo $this->partial('js/filter/map.phtml');
} ?>
<?php //echo $this->partial('js/template/filter/confirm_location_remove.phtml')?>