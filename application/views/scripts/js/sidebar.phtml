<?php echo $this->partial('js/sidebar/highlight_tab.phtml')?>
<?php echo $this->partial('js/sidebar/bookmark_tab.phtml')?>
<script type="text/javascript">
var ns_sidebar = {
  activeTab: "#category_tab",
  isFirstLoadHighlight: true,
  isFirstLoadBookmark: true,
  is_saved_filter_overrided: 0,
  elem_saved_filter_list_txt: '.saved_filter .user_saved_filter_list',
  init: function(){
    $.ajax({
      type: "POST",
      url: "<?php echo $this->baseUrl('ajax/filter/get') ?>",
      success: function(msg){
        jQuery.each( msg.result, function( i, val ) {
          $(ns_sidebar.elem_saved_filter_list_txt).prepend('<div class="filter_line" data-value="'+val.name+'"><a class="delete_this_filter" href="#">D</a> <a class="filter_name" href="#">'+val.name+'</a></div>');
        })
      },
      dataType:'json'
    });
  },
  loadTab: function(isRefreshList){
    if (typeof isRefreshList == "undefined") var isRefreshList = false;
      if (ns_sidebar.activeTab == "#highlight_tab" ){
        $('#sidebar .options .edit_list_order').hide();
        //$('#sidebar .options .refresh').show();
        if (isRefreshList == true || ns_sidebar.isFirstLoadHighlight == true){
        ns_sidebar_highlight_tab.fetch();
        ns_sidebar.isFirstLoadHighlight = false;
      }
    }else if (ns_sidebar.activeTab == "#bookmark_tab" ){
      $('#sidebar .options .edit_list_order').hide();
      //$('#sidebar .options .refresh').show();
      if (isRefreshList == true || ns_sidebar.isFirstLoadBookmark == true || ns_sidebar_bookmark_tab.is_reload == true){
        ns_sidebar_bookmark_tab.fetch();
        ns_sidebar.isFirstLoadBookmark = false;
      }
      <?php /*$(ns_sidebar.activeTab).find("li .teaser, li .title").dotdotdot({
          wrap : 'letter',
          height: 18
      });*/ ?>
    }else if (ns_sidebar.activeTab == "#category_tab"){
      $('#sidebar .options .edit_list_order').show();
      //$('#sidebar .options .refresh').hide();
    }
  }
}
var feed_search_form;
jQuery(function($) {
  ns_sidebar.init();
  ns_sidebar.loadTab();
  //form date validation
  feed_search_form = $("#feed_search").validate({
    rules: {
      begin_date: {
        date: true
      }, 
      end_date: {
        date: true
      }
    },
    submitHandler: function(form) {
      ns_feeds.updateVariableAndUrlParamFromFeedInput($('*[name="is_all_time"]'));
      ns_feeds.updateVariableAndUrlParamFromFeedInput($('*[name="q"]'));
      ns_feeds.updateVariableAndUrlParamFromFeedInput($('*[name="begin_time"]'));
      ns_feeds.updateVariableAndUrlParamFromFeedInput($('*[name="end_time"]'));
      
      ns_feeds.refresh('index');
    }
  });
  
  //$(".sidebar_tabs .tab").hide(); //Hide all content
  //$(".sidebar_tabs .tab:first").show(); //Show first tab content
  $("ul.home_tab li:first").addClass("active").show(); //Activate first tab
  
  var check_all_day = function(){
      if ($('#feed_search input[name="is_all_time"]').is(':checked')) {
          $('#feed_search input[name="begin_date"]').datepicker('disable');
          $('#feed_search input[name="end_date"]').datepicker('disable');
      } else {
          $('#feed_search input[name="begin_date"]').datepicker('enable');
          $('#feed_search input[name="end_date"]').datepicker('enable');
      }
  };
  check_all_day();
  $('body').on('change', '#feed_search input[name="is_all_time"]', function() {check_all_day()});

  //tuning date range (no reversed date range)
  var sidebar_dates = $('#feed_search input[name="begin_date"], #feed_search input[name="end_date"]').datepicker({
      defaultDate: "+1w",
      changeMonth: true,
      changeYear: true,
      onSelect: function( selectedDate ) {
        var option = this.name == "begin_date" ? "minDate" : "maxDate",
            instance = $( this ).data( "datepicker" ),
            date = $.datepicker.parseDate(
                instance.settings.dateFormat ||
                $.datepicker._defaults.dateFormat,
                selectedDate, instance.settings );
        sidebar_dates.not( this ).datepicker( "option", option, date );
      }
  });
  
  
  //expand accordions        
  var accordion_expand_handler = function() {
      var accordion = $(this).parents('.accordion');
      if (accordion.data('expanded') == 0) {
          $(this).addClass('on');
          accordion.find('.accordion_content').slideDown('fast');
          accordion.data('expanded', 1);
      } else {
          $(this).removeClass('on');
          accordion.find('.accordion_content').slideUp('fast');
          accordion.data('expanded', 0);
      }
  };
  var accordion_init_expand_handler = function(){
      var accordion = $(this).parents('.accordion');
      if (accordion.data('expanded') == 1) {
          $(this).addClass('on');
          accordion.find('.accordion_content').show();
      } else {
          $(this).removeClass('on');
          accordion.find('.accordion_content').hide();
      }
  }
  $('.shown_categories .accordion_button').bind('click', accordion_expand_handler);
  $('.shown_categories .accordion_button').each(accordion_init_expand_handler);

  //change arrow during accordion mouseover and mouseout 
  $('.accordion_button, .accordion_button_sub').mouseover(function() {
      $(this).addClass('over');
  }).mouseout(function() {
      $(this).removeClass('over');
  });
  
  
  //clicking sub accordion button
  $('.accordion_button_sub').click(function() {
      $('.accordion_button_sub').removeClass('active');
      $('.accordion_content_sub').slideUp('normal');
      
      if($(this).next().is(':hidden') == true) {
          $(this).addClass('active');
          $(this).next().slideDown('normal');
       }
   });
   
  //$('.accordion_content_sub').hide();
  
  // click to trigger edit list order mode
  $('body').on('click', 'ul.home_tab li', function(e) {
    e.preventDefault();
    $("ul.home_tab li").removeClass("active");
    $(this).addClass("active");
    $(".sidebar_tabs .tab").hide();
    ns_sidebar.activeTab = $(this).find("a").attr("href");
    $(ns_sidebar.activeTab).fadeIn();
    ns_sidebar.loadTab();
  })
  .on('click', '.edit_list_order', function(e) {
    e.preventDefault();
    if ($(this).data('flag') == 0) {
        $('#category_tab .shown_categories .movable').show();
        $(this).data('flag', 1).text('finish editing!');
        $('.shown_categories .accordion_button').unbind('click', accordion_expand_handler).addClass('editing');
        $('.hidden_categories').addClass('editing');
        $('.accordion_content').hide();
        $('.shown_categories .accordions').sortable({
            handle : ".movable",
            placeholder : "ui-state-highlight tab_placeholder"
        }).sortable("enable");
    } else {
        $('.hidden_categories').removeClass('editing');
        $('#category_tab .shown_categories .movable').hide();
        $(this).data('flag', 0).text('edit list order...');
        $(".accordions").sortable("disable").enableSelection();
        $('.shown_categories .accordion_button').bind('click', accordion_expand_handler).removeClass('editing');
        $('.shown_categories .accordion_button').each(accordion_init_expand_handler);
    }
  }) //show/hide toggle
  .on('click', '.hide_toggle', function(e) {
    e.preventDefault();
    var element = $(this).parents('.accordion');
    if ($(this).data('flag') == 1) {
        element.appendTo($('.hidden_categories .accordions'));
        $('#category_tab .hidden_categories .movable').css('display', 'none');
        $(this).text('Show');
        $(this).data('flag', 0);
    } else {
        element.appendTo($('.shown_categories .accordions'));
        $('#category_tab .shown_categories .movable').css('display', 'block');
        $(this).text('Hide');
        $(this).data('flag', 1);
    }
  })
  .on('click','.saved_filter .save_filter',function(){
        ns_common_head.jQDialog(
            '<?php echo $this->translate('save this filter') ?>',
            '<?php echo $this->baseUrl('ajax/dialog/save_filter')?>',
            {
                'title':'enter filter name...'
            },
            {
                Save: function() {
                    var dialog=$(this);
                    var location_name=$('.dialog input.save_filter_name').val();
                    $.ajax({
                          type: "POST",
                          url: "<?php echo $this->baseUrl('ajax/filter/save') ?>",
                            data: {
                              name:location_name,
                              is_match_interest: ns_feeds.feed_para['is_match_interest'],
                              is_match_location: ns_feeds.feed_para['is_match_location'],
                              place_lat:ns_feeds.feed_para['place_lat'],
                              place_lng:ns_feeds.feed_para['place_lng'],
                              radius:ns_feeds.feed_para['radius'],
                              sort_by:ns_feeds.feed_para['sort_by'],
                              q:ns_feeds.feed_para['q'],
                              begin_date:ns_feeds.feed_para['begin_date'],
                              end_date:ns_feeds.feed_para['end_date'],
                              override:ns_sidebar.is_saved_filter_overrided
                            },
                          success: function(msg){
                                if (msg['result']==1){
                                    
                                    if (!ns_sidebar.is_saved_filter_overrided){
                                      $(ns_sidebar.elem_saved_filter_list_txt).prepend('<div class="filter_line" data-value="'+location_name+'"><a class="delete_this_filter" href="#">D</a> <a class="filter_name" href="#">'+location_name+'</a></div>');
                                      
                                    }else{
                                      ns_sidebar.is_saved_filter_overrided = false;
                                    }
                                    dialog.dialog( "close" );
                                }else if (msg['result']==1062){
                                  
                                    $('.dialog').prepend('<p><?php echo $this->translate('same name exists in your saved locations, do you still want to override?')?></p>');
                                    ns_sidebar.is_saved_filter_overrided = true;
                                }else{
                                    $('.dialog').prepend('<p><?php echo $this->translate('unknown error occured, please try again.')?></p>')
                                }
                            },
                        dataType:'json'
                    });

                },
                Cancel: function() {
                    $( this ).dialog( "close" );
                    ns_sidebar.is_saved_filter_overrided=false;
                }
            }
         );
      return false;
   }).on('click', '.delete_this_filter', function(){
        var filter_line =$(this).parents('.filter_line');
        var filter_value =filter_line.data('value');
        $.ajax({
          type: "POST",
          url: "<?php echo $this->baseUrl('ajax/filter/delete') ?>",
            data: {
                'name':filter_value,
            },
          success: function(msg){
            if (msg['result']==1){
                filter_line.remove();
            }else{
                $('#dialog').prepend('<p><?php echo $this->translate('unknown error occured, please try again.')?></p>')
            }
            },
            dataType:'json'
        });
        return false;
    }).on('click','.filter_name',function(){
        var elem_filter_line =$(this).parents('.filter_line');
        var filter_value =elem_filter_line.data('value');
        $.ajax({
          type: "POST",
          url: "<?php echo $this->baseUrl('ajax/filter/get') ?>",
            data: {
                'name':filter_value,
            },
          success: function(msg){
            $('.filter_line').removeClass('selected');
            elem_filter_line.addClass('selected');
            jQuery.each(msg.result[0],function(i,val){
              if (typeof val != 'undefined'){
                ns_feeds.updateUrlParam(i, val);
              }else {
                ns_feeds.updateUrlParam(i, false);
              }
            })
            $.address.update();
            ns_common_foot.updateVariablesFromUrlParams();
            console.log(this.feed_para);
            ns_feeds.updateFeedInputsFromVariables();
            ns_filter_map.initMap();
            
            ns_feeds.refresh('index');
          },
          dataType:'json'
        });
    });
}); 
</script>

<script type="text/javascript">
// auto complete search
$.widget( "custom.catcomplete", $.ui.autocomplete, {
  _renderMenu: function( ul, items ) {
    var that = this,
      currentCategory = "";
    $.each( items, function( index, item ) {
      if ( item.category != currentCategory ) {
        ul.append( "<li class='ui-autocomplete-category'>" + item.category + "</li>" );
        currentCategory = item.category;
      }
      that._renderItemData( ul, item );
    });
  }
});
$(function() {
  <?php /*var data = [
    { label: "anders", category: "" },
    { label: "andreas", category: "" },
    { label: "antal", category: "" },
    { label: "annhhx10", category: "Products" },
    { label: "annk K12", category: "Products" },
    { label: "annttop C13", category: "Products" },
    { label: "anders andersson", category: "People" },
    { label: "andreas andersson", category: "People" },
    { label: "andreas johnson", category: "People" }
    ];
 */ ?>
    $( ".keyword_text" ).catcomplete({
      delay: 0,
      //source: data,
      source: function( request, response ) {
        $.ajax({
          type: "GET",
          url: "<?php echo $this->baseUrl('ajax/search/autocomplete') ?>",
          dataType: "json",
          data: {
            q: $('.keyword_text').val()
          },
          success: function( data ) {
            response( data);
          }
        });
      },
  });
});
</script>
<?php echo $this->partial('js/template/sidebar/highlight_list_item.phtml')?>
<?php echo $this->partial('js/template/sidebar/bookmark_list_item.phtml')?>