<script type="text/javascript">
var ns_sidebar_bookmark_tab = {
  is_fetching: false,
  has_nth_fetched: false,
  used_ids: [],
  rpp: 3,
  is_reload: false,
  sort_by: 'bookmark_time',
  sort_order: 'desc',
  fetch: function(){
    <?php if (Zend_Auth::getInstance()->hasIdentity() && Common::getSession()->user != null) { ?>
    if (ns_sidebar_bookmark_tab.is_fetching == false){
      if (ns_sidebar_bookmark_tab.is_reload){
        $("#bookmark_tab .bookmark_list li[data-id]").remove();
        ns_sidebar_bookmark_tab.used_ids = [];
        $("#bookmark_tab .bookmark_list .loading").show();
        $("#bookmark_tab .bookmark_list .load_more .more").hide();
        ns_sidebar_bookmark_tab.is_reload = false;
      }
      ns_sidebar_bookmark_tab.is_fetching=true;
    ns_sidebar_bookmark_tab.sort_by = $('#bookmark_tab .sort.active').data('id');
    ns_sidebar_bookmark_tab.sort_order = $('#bookmark_tab .sort.active').hasClass('asc') ? 'asc' : 'desc';
      $.ajax({
        type: "POST",
        url: "<?php echo $this->baseUrl('ajax/bookmark/get_bookmarks') ?>",
        data: {
          used_ids: ns_sidebar_bookmark_tab.used_ids,
          sort_by: ns_sidebar_bookmark_tab.sort_by,
          sort_order: ns_sidebar_bookmark_tab.sort_order
        },
        success: function(msg){
          if (msg.data.length == 0) 
            ns_sidebar_bookmark_tab.has_nth_fetched = true;
          else ns_sidebar_bookmark_tab.has_nth_fetched = false;
          var content = ns_feed.getHTML(msg, 'sidebar_bookmark_list_item', {
            getID: function() { 
              if ($.inArray( this.data.id, ns_sidebar_bookmark_tab.used_ids ) ==-1)
                ns_sidebar_bookmark_tab.used_ids.push(this.data.id);
                //$('.bookmark_popup[data-id="'+this.data.id+'"]').remove();
              return this.data.id;
            },
            formatMysqlDate2: function() { 
              if (typeof arguments[0] == 'string') 
                return $.datepicker.formatDate('dd M', mysqlTimeStampToDate(arguments[0]));
            }
          });
          $("#bookmark_tab .bookmark_list .load_more").before(content);
          $("#bookmark_tab .bookmark_list .loading").hide();
          $(ns_sidebar.activeTab).find("li .teaser, li .title").dotdotdot({
            wrap : 'letter',
            height: 25
          });
          if (ns_sidebar_bookmark_tab.used_ids.length >=  ns_sidebar_bookmark_tab.rpp){
            $('#bookmark_tab .bookmark_list').scrollpanel();
          }
          $("#bookmark_tab .bookmark_list .load_more .more").show();
          var popup_content = ns_feed.getHTML(msg, 'bookmark_popup', ns_bookmark_popup.tmpl_functions);
          $('body').append(popup_content);
          ns_sidebar_bookmark_tab.is_fetching=false;
        },
        error: function(){
          $("#bookmark_tab .bookmark_list").html('<li><?php echo $this->translate('Connection failed. Please try again later.') ?></li>');
        },
        dataType:"json"
      });
    }
    <? } else { ?>
          $("#bookmark_tab .bookmark_list").html('<li><?php echo $this->translate('Please login to view the bookmarked items.') ?></li>');
    <?php } ?>
  }
};
jQuery(function($){
  $('#bookmark_tab ul').mousewheel(function(){
    $('.bookmark_popup, .trigger_popup_icon').hide();
    var parent_div = $('.sp-viewport'); 
    var scroll_pos = parent_div.scrollTop()+parent_div.innerHeight();
    var scroll_height = parent_div[0].scrollHeight;
    if (scroll_pos +35 >= scroll_height && !ns_sidebar_bookmark_tab.has_nth_fetched){
      ns_sidebar_bookmark_tab.fetch();
    }
  })
  $('#bookmark_tab .bookmark_list .load_more').click(function(e){
    e.preventDefault();
    ns_sidebar_bookmark_tab.fetch();
  })
  
  $('body').on('click', '#bookmark_tab .sort', function(e) {
    e.preventDefault();
    if (ns_sidebar_bookmark_tab.is_fetching == false){
      if ($(this).hasClass('disabled')){
        $(this).removeClass('disabled');
        $(this).addClass('active');
      }else{
        $(this).toggleClass('asc');
      }
      $('#bookmark_tab .sort').not($(this)).removeClass('asc');
      $('#bookmark_tab .sort').not($(this)).addClass('disabled');
      $('#bookmark_tab .sort').not($(this)).removeClass('active');
      
      ns_sidebar_bookmark_tab.used_ids = [];
      ns_sidebar_bookmark_tab.is_reload = true;
      ns_sidebar_bookmark_tab.fetch();
    }
    
  });
})  
</script>